name: Build ExpressLRS Backpack
on: [push, pull_request]
jobs:
  targets:
    runs-on: ubuntu-latest
    outputs:
      targets: ${{ steps.set-targets.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - id: set-targets
      run: echo "targets=[$(grep -r "\[env:" targets | sed 's/.*://' | sed s/.$// | egrep "UART" | tr '\n' ',' | sed 's/,$/"\n/' | sed 's/,/","/'g | sed 's/^/"/')]" >> $GITHUB_OUTPUT

  build:
    needs: targets
    strategy:
      fail-fast: false
      matrix:
        target: ${{fromJSON(needs.targets.outputs.targets)}}
    runs-on: ubuntu-latest
    steps:

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v4

    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.target }}

    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install platformio
        pip install wheel

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio

    - name: Run PlatformIO
      run: |
        platformio platform update
        platformio platform install native
        mkdir -p ~/artifacts
        pio run -e ${{ matrix.target }}
        mv .pio/build ~/artifacts/

    - name: Store Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ExpressLRS-Backpack-${{ env.GITHUB_REF_SLUG_URL }}-${{ github.run_number }}
        path: ~/artifacts/**/*.bin
      continue-on-error: true
